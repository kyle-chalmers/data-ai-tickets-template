-- DI-974: OPTIMIZED ALTER VW_DSH_MONTHLY_ROLL_RATE_MONITORING View to Add SIMM Placement Flag
-- Performance optimizations applied:
-- 1. Moved subquery logic to CTE for better optimization
-- 2. Eliminated redundant DISTINCT operation in subquery
-- 3. Pre-calculated date truncation operations
-- 4. Standardized SIMM data handling approach

CREATE OR REPLACE VIEW BUSINESS_INTELLIGENCE.CRON_STORE.VW_DSH_MONTHLY_ROLL_RATE_MONITORING(
	PAYOFFUID,
	DPD,
	DPDCURRENT,
	DATECURRENT,
	DATEPREVIOUS,
	STATUSCURRENT,
	STATUSPREVIOUS,
	LOANSTATUSCURRENT,
	LOANSTATUSPREVIOUS,
	ROLL,
	LOANINTENT,
	ASOFDATE,
	PORTFOLIOID,
	PORTFOLIONAME,
	ORIGINATIONDATE,
	REGULARPAYMENTAMOUNT,
	LASTPAYMENTDATE,
	LASTPAYMENTAMOUNT,
	ACCRUEDINTEREST,
	BEGINNINGBALANCE,
	LOANAMOUNT,
	INTERESTPAYMENTAMOUNT,
	PRINCIPALPAYMENTAMOUNT,
	TOTALPAYMENTCOLLECTED,
	REMAININGPRINCIPAL,
	SERVICINGFEEAMOUNT,
	REMITTANCEAMOUNT,
	INTERESTPAIDTODATE,
	INTERESTPAIDTODATE_CU_CURRENT,
	PRINCIPALPAIDTODATE,
	PRINCIPALPAIDTODATE_CU_CURRENT,
	TERMSREMAINING,
	TOTALPRINCIPALWAIVED,
	NEXTPAYMENTDUEDATE,
	NEXTPRINCIPALAMOUNTDUE,
	NEXTINTERESTAMOUNTDUE,
	SERVICERFEERATE,
	STATUS,
	DAYSPASTDUE_LOANTAPE,
	PASTDUEINTEREST,
	TOTALNSFFEES,
	DEFERREDAMOUNT,
	DEFERREDPAYMENTDUEDATE,
	LOANMOD,
	LOANMODREASON,
	LOANMODINTERESTRATE,
	LOANMODTERMEXTENSION,
	LOANMODFORBEARANCE,
	LOANMODNEWMATURITY,
	LOANMODEFFECTIVEDATE,
	INTERNALSTATUS,
	CPVERSION_LOANTAPE,
	LOANTIER,
	LOAN_INTENT_LOANTAPE,
	BANKRUPTCYFLAG,
	TERM,
	ANNUALINCOME,
	BUREAUFICOSCORE,
	NDI,
	DTI,
	LAST_TOUCH_UTM_CHANNEL_GROUPING,
	CURRENT_SIMM_PLACEMENT_FLAG,
	HISTORICAL_SIMM_PLACEMENT_FLAG,
	FIRST_SIMM_DATE
) AS
WITH 
-- OPTIMIZATION 1: Move historical SIMM data to CTE for better optimization
simm_historical AS (
    SELECT 
        PAYOFFUID,
        MIN(LOAN_TAPE_ASOFDATE) as FIRST_SIMM_DATE
    FROM BUSINESS_INTELLIGENCE.CRON_STORE.RPT_OUTBOUND_LISTS_HIST
    WHERE SET_NAME = 'SIMM'
        AND SUPPRESSION_FLAG = FALSE
    GROUP BY PAYOFFUID
),
-- OPTIMIZATION 2: Move current SIMM data to CTE and eliminate DISTINCT
simm_current AS (
    SELECT 
        PAYOFFUID,
        DATE_TRUNC('MONTH', LOAN_TAPE_ASOFDATE) as SIMM_MONTH
    FROM BUSINESS_INTELLIGENCE.CRON_STORE.RPT_OUTBOUND_LISTS_HIST
    WHERE SET_NAME = 'SIMM' 
        AND SUPPRESSION_FLAG = FALSE
    GROUP BY PAYOFFUID, DATE_TRUNC('MONTH', LOAN_TAPE_ASOFDATE)  -- GROUP BY eliminates duplicates more efficiently than DISTINCT
),
-- OPTIMIZATION 3: Pre-calculate loan tape date truncation to avoid repeated function calls
loan_tape_with_month AS (
    SELECT *,
        DATE_TRUNC('MONTH', ASOFDATE) as LOAN_MONTH
    FROM BUSINESS_INTELLIGENCE.DATA_STORE.MVW_LOAN_TAPE_MONTHLY
)
SELECT
	A.PAYOFFUID,
	A.DPD,
	A.DPDCURRENT,
	A.DATECURRENT,
	A.DATEPREVIOUS,
	A.STATUSCURRENT,
	A.STATUSPREVIOUS,
	A.LOANSTATUSCURRENT,
	A.LOANSTATUSPREVIOUS,
	A.ROLL,
	A.LOANINTENT,
	B.ASOFDATE,
	B.PORTFOLIOID,
	B.PORTFOLIONAME,
	B.ORIGINATIONDATE,
	B.REGULARPAYMENTAMOUNT,
	B.LASTPAYMENTDATE,
	B.LASTPAYMENTAMOUNT,
	B.ACCRUEDINTEREST,
	B.BEGINNINGBALANCE,
	B.LOANAMOUNT,
	B.INTERESTPAYMENTAMOUNT,
	B.PRINCIPALPAYMENTAMOUNT,
	B.TOTALPAYMENTCOLLECTED,
	B.REMAININGPRINCIPAL,
	B.SERVICINGFEEAMOUNT,
	B.REMITTANCEAMOUNT,
	B.INTERESTPAIDTODATE,
	B.INTERESTPAIDTODATE_CU_CURRENT,
	B.PRINCIPALPAIDTODATE,
	B.PRINCIPALPAIDTODATE_CU_CURRENT,
	B.TERMSREMAINING,
	B.TOTALPRINCIPALWAIVED,
	B.NEXTPAYMENTDUEDATE,
	B.NEXTPRINCIPALAMOUNTDUE,
	B.NEXTINTERESTAMOUNTDUE,
	B.SERVICERFEERATE,
	B.STATUS,
	B.DAYSPASTDUE AS DAYSPASTDUE_LOANTAPE,
	B.PASTDUEINTEREST,
	B.TOTALNSFFEES,
	B.DEFERREDAMOUNT,
	B.DEFERREDPAYMENTDUEDATE,
	B.LOANMOD,
	B.LOANMODREASON,
	B.LOANMODINTERESTRATE,
	B.LOANMODTERMEXTENSION,
	B.LOANMODFORBEARANCE,
	B.LOANMODNEWMATURITY,
	B.LOANMODEFFECTIVEDATE,
	B.INTERNALSTATUS,
	B.CPVERSION AS CPVERSION_LOANTAPE,
	COALESCE(B.LOANTIER, 'TH') as LOANTIER,
	B.LOAN_INTENT AS LOAN_INTENT_LOANTAPE,
	B.BANKRUPTCYFLAG,
	B.TERM,
	B.ANNUALINCOME,
	B.BUREAUFICOSCORE,
	B.NDI,
	B.DTI,
	C.LAST_TOUCH_UTM_CHANNEL_GROUPING,
	
	-- OPTIMIZATION 2: Simplified CASE statement using CTE join
	CASE 
        WHEN simm_current.PAYOFFUID IS NOT NULL 
        THEN 1 
        ELSE 0 
    END AS CURRENT_SIMM_PLACEMENT_FLAG,
    
    CASE 
        WHEN simm_historical.PAYOFFUID IS NOT NULL 
            AND B.ASOFDATE >= simm_historical.FIRST_SIMM_DATE 
        THEN 1 
        ELSE 0 
    END AS HISTORICAL_SIMM_PLACEMENT_FLAG,
    
    simm_historical.FIRST_SIMM_DATE
	---
FROM
	BUSINESS_INTELLIGENCE.CRON_STORE.RPT_TRANSITION_MATRIX_MONTHLY A
/***********************************************************************************************************************
Create Date:        2023-05-17
Author:             Kyle Chalmers
Description:        Use tableau_user to modify this view. This view loads all the necessary fields from
                    BUSINESS_INTELLIGENCE.CRON_STORE.RPT_TRANSITION_MATRIX_MONTHLY (BI-681) and
					BUSINESS_INTELLIGENCE.DATA_STORE.MVW_LOAN_TAPE_MONTHLY
					to create the data source from which we can attribute (not with 100% accuracy) balances cured for delinquent
					accounts to agents and by channel and portfolio name. PLEASE NOTE THAT THE RPT_TRANSITION_MATRIX_MONTHLY table
					drops and refreshes every morning between 7am to ~8:30-9:00am, so this view might have no rows during that time,
					and for that reason the refresh of the dashboard itself is later than that. The data is transformed within the dashboard
					to display the desired metrics. Initial logic to this query was provided by Cale Williams.
Used by:            Balances Cured Tableau Dashboard:
                        <https://10ay.online.tableau.com/#/site/happymoney/workbooks/1173045?:origin=card_share_link>
                    Monthly Roll Rate Monitoring Dashboard:
                        <https://10ay.online.tableau.com/#/site/happymoney/workbooks/798563?:origin=card_share_link>
************************************************************************************************************************
SUMMARY OF CHANGES
Date(yyyy-mm-dd)    Author              Comments
2023-05-17          Kyle Chalmers       Created the view for monthly roll rate monitoring
2023-07-12          Kevin Liu           Added to LOANTIER logic to account for nulls ('TH')
2025-01-31          Claude Assistant    Added SIMM placement flag and date (DI-974)
2025-08-01          Claude Assistant    Performance optimizations (DI-974)

***********************************************************************************************************************/
-- OPTIMIZATION 3: Use pre-calculated month column to avoid repeated DATE_TRUNC calls
INNER JOIN loan_tape_with_month B
ON
	LAST_DAY(DATE(A.DATECURRENT)) = LAST_DAY(DATE(B.ASOFDATE))
	AND A.PAYOFFUID = B.PAYOFFUID
LEFT JOIN DATA_STORE.MVW_APPL_STATUS_TRANSITION C
ON
	A.PAYOFFUID = C.PAYOFFUID
-- OPTIMIZATION 2: Use CTE instead of subquery for better optimization
LEFT JOIN simm_current ON A.PAYOFFUID = simm_current.PAYOFFUID 
    AND B.LOAN_MONTH = simm_current.SIMM_MONTH
LEFT JOIN simm_historical ON A.PAYOFFUID = simm_historical.PAYOFFUID
WHERE
	ROUND(MONTHS_BETWEEN(LAST_DAY(DATE(A.DATECURRENT)), LAST_DAY(DATE(A.DATEPREVIOUS))),0) = 1;