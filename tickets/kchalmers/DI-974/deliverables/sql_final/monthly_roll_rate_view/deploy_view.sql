-- DI-974: OPTIMIZED ALTER VW_DSH_MONTHLY_ROLL_RATE_MONITORING View to Add SIMM Placement Flag
-- Performance optimizations while maintaining identical business logic

CREATE OR REPLACE VIEW BUSINESS_INTELLIGENCE.CRON_STORE.VW_DSH_MONTHLY_ROLL_RATE_MONITORING(
	PAYOFFUID,
	DPD,
	DPDCURRENT,
	DATECURRENT,
	DATEPREVIOUS,
	STATUSCURRENT,
	STATUSPREVIOUS,
	LOANSTATUSCURRENT,
	LOANSTATUSPREVIOUS,
	ROLL,
	LOANINTENT,
	ASOFDATE,
	PORTFOLIOID,
	PORTFOLIONAME,
	ORIGINATIONDATE,
	REGULARPAYMENTAMOUNT,
	LASTPAYMENTDATE,
	LASTPAYMENTAMOUNT,
	ACCRUEDINTEREST,
	BEGINNINGBALANCE,
	LOANAMOUNT,
	INTERESTPAYMENTAMOUNT,
	PRINCIPALPAYMENTAMOUNT,
	TOTALPAYMENTCOLLECTED,
	REMAININGPRINCIPAL,
	SERVICINGFEEAMOUNT,
	REMITTANCEAMOUNT,
	INTERESTPAIDTODATE,
	INTERESTPAIDTODATE_CU_CURRENT,
	PRINCIPALPAIDTODATE,
	PRINCIPALPAIDTODATE_CU_CURRENT,
	TERMSREMAINING,
	TOTALPRINCIPALWAIVED,
	NEXTPAYMENTDUEDATE,
	NEXTPRINCIPALAMOUNTDUE,
	NEXTINTERESTAMOUNTDUE,
	SERVICERFEERATE,
	STATUS,
	DAYSPASTDUE_LOANTAPE,
	PASTDUEINTEREST,
	TOTALNSFFEES,
	DEFERREDAMOUNT,
	DEFERREDPAYMENTDUEDATE,
	LOANMOD,
	LOANMODREASON,
	LOANMODINTERESTRATE,
	LOANMODTERMEXTENSION,
	LOANMODFORBEARANCE,
	LOANMODNEWMATURITY,
	LOANMODEFFECTIVEDATE,
	INTERNALSTATUS,
	CPVERSION_LOANTAPE,
	LOANTIER,
	LOAN_INTENT_LOANTAPE,
	BANKRUPTCYFLAG,
	TERM,
	ANNUALINCOME,
	BUREAUFICOSCORE,
	NDI,
	DTI,
	LAST_TOUCH_UTM_CHANNEL_GROUPING,
	CURRENT_SIMM_PLACEMENT_FLAG,
	HISTORICAL_SIMM_PLACEMENT_FLAG,
	FIRST_SIMM_DATE
) AS
-- OPTIMIZATION 1: Consolidated SIMM data processing with pre-computed date functions  
WITH simm_placements AS (
    SELECT 
        PAYOFFUID,
        MIN(LOAN_TAPE_ASOFDATE) as FIRST_SIMM_DATE
    FROM BUSINESS_INTELLIGENCE.CRON_STORE.RPT_OUTBOUND_LISTS_HIST
    WHERE SET_NAME = 'SIMM'
        AND SUPPRESSION_FLAG = FALSE
    GROUP BY PAYOFFUID
),
-- OPTIMIZATION 2: Pre-calculate month truncation to avoid repeated function calls
loan_tape_with_month AS (
    SELECT 
        B.*,
        DATE_TRUNC('MONTH', B.ASOFDATE) as LOAN_MONTH
    FROM BUSINESS_INTELLIGENCE.DATA_STORE.MVW_LOAN_TAPE_MONTHLY B
),
-- OPTIMIZATION 3: Convert subquery to CTE for better optimization
simm_current AS (
    SELECT 
        PAYOFFUID,
        DATE_TRUNC('MONTH', LOAN_TAPE_ASOFDATE) as SIMM_MONTH
    FROM BUSINESS_INTELLIGENCE.CRON_STORE.RPT_OUTBOUND_LISTS_HIST
    WHERE SET_NAME = 'SIMM' 
        AND SUPPRESSION_FLAG = FALSE
    GROUP BY PAYOFFUID, DATE_TRUNC('MONTH', LOAN_TAPE_ASOFDATE)
)
SELECT
	A.PAYOFFUID,
	A.DPD,
	A.DPDCURRENT,
	A.DATECURRENT,
	A.DATEPREVIOUS,
	A.STATUSCURRENT,
	A.STATUSPREVIOUS,
	A.LOANSTATUSCURRENT,
	A.LOANSTATUSPREVIOUS,
	A.ROLL,
	A.LOANINTENT,
	B.ASOFDATE,
	B.PORTFOLIOID,
	B.PORTFOLIONAME,
	B.ORIGINATIONDATE,
	B.REGULARPAYMENTAMOUNT,
	B.LASTPAYMENTDATE,
	B.LASTPAYMENTAMOUNT,
	B.ACCRUEDINTEREST,
	B.BEGINNINGBALANCE,
	B.LOANAMOUNT,
	B.INTERESTPAYMENTAMOUNT,
	B.PRINCIPALPAYMENTAMOUNT,
	B.TOTALPAYMENTCOLLECTED,
	B.REMAININGPRINCIPAL,
	B.SERVICINGFEEAMOUNT,
	B.REMITTANCEAMOUNT,
	B.INTERESTPAIDTODATE,
	B.INTERESTPAIDTODATE_CU_CURRENT,
	B.PRINCIPALPAIDTODATE,
	B.PRINCIPALPAIDTODATE_CU_CURRENT,
	B.TERMSREMAINING,
	B.TOTALPRINCIPALWAIVED,
	B.NEXTPAYMENTDUEDATE,
	B.NEXTPRINCIPALAMOUNTDUE,
	B.NEXTINTERESTAMOUNTDUE,
	B.SERVICERFEERATE,
	B.STATUS,
	B.DAYSPASTDUE AS DAYSPASTDUE_LOANTAPE,
	B.PASTDUEINTEREST,
	B.TOTALNSFFEES,
	B.DEFERREDAMOUNT,
	B.DEFERREDPAYMENTDUEDATE,
	B.LOANMOD,
	B.LOANMODREASON,
	B.LOANMODINTERESTRATE,
	B.LOANMODTERMEXTENSION,
	B.LOANMODFORBEARANCE,
	B.LOANMODNEWMATURITY,
	B.LOANMODEFFECTIVEDATE,
	B.INTERNALSTATUS,
	B.CPVERSION AS CPVERSION_LOANTAPE,
	coalesce(B.LOANTIER, 'TH') as LOANTIER,
	B.LOAN_INTENT AS LOAN_INTENT_LOANTAPE,
	B.BANKRUPTCYFLAG,
	B.TERM,
	B.ANNUALINCOME,
	B.BUREAUFICOSCORE,
	B.NDI,
	B.DTI,
	C.LAST_TOUCH_UTM_CHANNEL_GROUPING,
	
	-- OPTIMIZATION 4: Simplified SIMM flag logic using pre-computed CTEs
	CASE WHEN simm_current.PAYOFFUID IS NOT NULL THEN 1 ELSE 0 END AS CURRENT_SIMM_PLACEMENT_FLAG,
    CASE 
        WHEN simm_historical.PAYOFFUID IS NOT NULL 
            AND B.ASOFDATE >= simm_historical.FIRST_SIMM_DATE 
        THEN 1 
        ELSE 0 
    END AS HISTORICAL_SIMM_PLACEMENT_FLAG,
    simm_historical.FIRST_SIMM_DATE
FROM
	BUSINESS_INTELLIGENCE.CRON_STORE.RPT_TRANSITION_MATRIX_MONTHLY A
INNER JOIN loan_tape_with_month B
ON
	LAST_DAY(DATE(A.DATECURRENT)) = LAST_DAY(DATE(B.ASOFDATE))
	AND A.PAYOFFUID = B.PAYOFFUID
LEFT JOIN DATA_STORE.MVW_APPL_STATUS_TRANSITION C
ON
	A.PAYOFFUID = C.PAYOFFUID
-- OPTIMIZATION 5: Efficient joins using pre-computed CTEs instead of subqueries
LEFT JOIN simm_current ON A.PAYOFFUID = simm_current.PAYOFFUID 
    AND B.LOAN_MONTH = simm_current.SIMM_MONTH
LEFT JOIN simm_placements simm_historical ON A.PAYOFFUID = simm_historical.PAYOFFUID
WHERE
	ROUND(MONTHS_BETWEEN(LAST_DAY(DATE(A.DATECURRENT)), LAST_DAY(DATE(A.DATEPREVIOUS))),0) = 1;