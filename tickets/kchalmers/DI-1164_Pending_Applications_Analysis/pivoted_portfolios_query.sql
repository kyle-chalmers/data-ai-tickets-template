-- ============================================================================
-- PIVOTED PORTFOLIOS QUERY - One Row Per Application with Boolean Indicators
-- ============================================================================

WITH portfolio_pivot AS (
    SELECT 
        APPLICATION_ID,
        
        -- Boolean indicators for each portfolio type
        MAX(CASE WHEN PORTFOLIO_NAME = 'API Affiliate' THEN 1 ELSE 0 END) AS API_AFFILIATE,
        MAX(CASE WHEN PORTFOLIO_NAME = 'Ocrolus' THEN 1 ELSE 0 END) AS OCROLUS,
        MAX(CASE WHEN PORTFOLIO_NAME = 'Pending Applicant Response' THEN 1 ELSE 0 END) AS PENDING_APPLICANT_RESPONSE,
        MAX(CASE WHEN PORTFOLIO_NAME = 'Document Review' THEN 1 ELSE 0 END) AS DOCUMENT_REVIEW,
        MAX(CASE WHEN PORTFOLIO_NAME = 'Auto Escalation' THEN 1 ELSE 0 END) AS AUTO_ESCALATION,
        MAX(CASE WHEN PORTFOLIO_NAME = 'Fraud Team Review' THEN 1 ELSE 0 END) AS FRAUD_TEAM_REVIEW,
        MAX(CASE WHEN PORTFOLIO_NAME = 'Processing' THEN 1 ELSE 0 END) AS PROCESSING,
        MAX(CASE WHEN PORTFOLIO_NAME = 'Review' THEN 1 ELSE 0 END) AS REVIEW,
        MAX(CASE WHEN PORTFOLIO_NAME = 'Complete' THEN 1 ELSE 0 END) AS COMPLETE,
        MAX(CASE WHEN PORTFOLIO_NAME = 'Generated' THEN 1 ELSE 0 END) AS GENERATED,
        MAX(CASE WHEN PORTFOLIO_NAME = 'Consumer Statement' THEN 1 ELSE 0 END) AS CONSUMER_STATEMENT,
        MAX(CASE WHEN PORTFOLIO_NAME = 'Income Bypass' THEN 1 ELSE 0 END) AS INCOME_BYPASS,
        MAX(CASE WHEN PORTFOLIO_NAME = 'Citizenship' THEN 1 ELSE 0 END) AS CITIZENSHIP,
        MAX(CASE WHEN PORTFOLIO_NAME = 'DOB Match' THEN 1 ELSE 0 END) AS DOB_MATCH,
        MAX(CASE WHEN PORTFOLIO_NAME = 'GIACT' THEN 1 ELSE 0 END) AS GIACT,
        
        -- Summary statistics
        COUNT(DISTINCT PORTFOLIO_ID) AS TOTAL_PORTFOLIOS,
        COUNT(DISTINCT PORTFOLIO_NAME) AS UNIQUE_PORTFOLIO_NAMES,
        
        -- Concatenated list for reference
        LISTAGG(PORTFOLIO_NAME, ', ') WITHIN GROUP (ORDER BY PORTFOLIO_NAME) AS ALL_PORTFOLIOS
        
    FROM BUSINESS_INTELLIGENCE.ANALYTICS.VW_APP_PORTFOLIOS_AND_SUB_PORTFOLIOS
    WHERE APPLICATION_ID IN ('3012211','3012495','3016579','2963364','3014115','3016235',
                             '3016071','2977446','3011634','3007232','3011932','3016798',
                             '3016931','3000933','3003732','3014711','3017141','3012766',
                             '3017196','3015042','3016106','3012386','3017586','3010286',
                             '3017275','3016050','3017833','3016038','2927052','3013953',
                             '3015476','2955104','2993310','3018044','3011226','3009787',
                             '3012842','3015898','2833697','3018403','3009694','2129780',
                             '3018148','3001929')
    GROUP BY APPLICATION_ID
),

-- Handle applications with no portfolio data
all_applications AS (
    SELECT value::VARCHAR AS APPLICATION_ID
    FROM TABLE(FLATTEN(INPUT => PARSE_JSON('[
        "3012211","3012495","3016579","2963364","3014115","3016235","3016071",
        "2977446","3011634","3007232","3011932","3016798","3016931","3000933",
        "3003732","3014711","3017141","3012766","3017196","3015042","3016106",
        "3012386","3017586","3010286","3017275","3016050","3017833","3016038",
        "2927052","3013953","3015476","2955104","2993310","3018044","3011226",
        "3009787","3012842","3015898","2833697","3018403","3009694","2129780",
        "3018148","3001929"
    ]')))
)

SELECT 
    a.APPLICATION_ID,
    
    -- Portfolio boolean indicators (0 if no portfolio data exists)
    COALESCE(p.API_AFFILIATE, 0) AS API_AFFILIATE,
    COALESCE(p.OCROLUS, 0) AS OCROLUS,
    COALESCE(p.PENDING_APPLICANT_RESPONSE, 0) AS PENDING_APPLICANT_RESPONSE,
    COALESCE(p.DOCUMENT_REVIEW, 0) AS DOCUMENT_REVIEW,
    COALESCE(p.AUTO_ESCALATION, 0) AS AUTO_ESCALATION,
    COALESCE(p.FRAUD_TEAM_REVIEW, 0) AS FRAUD_TEAM_REVIEW,
    COALESCE(p.PROCESSING, 0) AS PROCESSING,
    COALESCE(p.REVIEW, 0) AS REVIEW,
    COALESCE(p.COMPLETE, 0) AS COMPLETE,
    COALESCE(p.GENERATED, 0) AS GENERATED,
    COALESCE(p.CONSUMER_STATEMENT, 0) AS CONSUMER_STATEMENT,
    COALESCE(p.INCOME_BYPASS, 0) AS INCOME_BYPASS,
    COALESCE(p.CITIZENSHIP, 0) AS CITIZENSHIP,
    COALESCE(p.DOB_MATCH, 0) AS DOB_MATCH,
    COALESCE(p.GIACT, 0) AS GIACT,
    
    -- Summary columns
    COALESCE(p.TOTAL_PORTFOLIOS, 0) AS TOTAL_PORTFOLIOS,
    COALESCE(p.UNIQUE_PORTFOLIO_NAMES, 0) AS UNIQUE_PORTFOLIO_NAMES,
    COALESCE(p.ALL_PORTFOLIOS, 'None Found') AS ALL_PORTFOLIOS,
    
    -- Analysis flags
    CASE WHEN p.APPLICATION_ID IS NULL THEN 1 ELSE 0 END AS NO_PORTFOLIO_DATA,
    CASE WHEN p.FRAUD_TEAM_REVIEW = 1 THEN 1 ELSE 0 END AS FRAUD_FLAGGED,
    CASE WHEN p.TOTAL_PORTFOLIOS = 1 AND p.OCROLUS = 1 THEN 1 ELSE 0 END AS STUCK_IN_OCROLUS_ONLY,
    CASE WHEN p.PENDING_APPLICANT_RESPONSE = 1 THEN 1 ELSE 0 END AS CUSTOMER_ACTION_REQUIRED,
    CASE WHEN p.AUTO_ESCALATION = 1 OR p.REVIEW = 1 THEN 1 ELSE 0 END AS MANUAL_REVIEW_REQUIRED,
    
    -- Risk categorization
    CASE 
        WHEN p.APPLICATION_ID IS NULL THEN 'No Portfolio Data'
        WHEN p.FRAUD_TEAM_REVIEW = 1 THEN 'Fraud Review'
        WHEN p.TOTAL_PORTFOLIOS = 1 AND p.OCROLUS = 1 THEN 'Stuck in Verification'
        WHEN p.TOTAL_PORTFOLIOS >= 5 THEN 'Multiple Issues'
        WHEN p.AUTO_ESCALATION = 1 THEN 'Escalated'
        WHEN p.PENDING_APPLICANT_RESPONSE = 1 THEN 'Awaiting Customer'
        WHEN p.PROCESSING = 1 OR p.REVIEW = 1 THEN 'Under Review'
        ELSE 'Normal Processing'
    END AS PROCESSING_CATEGORY

FROM all_applications a
LEFT JOIN portfolio_pivot p ON a.APPLICATION_ID = p.APPLICATION_ID
ORDER BY 
    CASE 
        WHEN p.APPLICATION_ID IS NULL THEN 1
        WHEN p.FRAUD_TEAM_REVIEW = 1 THEN 2
        WHEN p.TOTAL_PORTFOLIOS = 1 AND p.OCROLUS = 1 THEN 3
        WHEN p.TOTAL_PORTFOLIOS >= 5 THEN 4
        ELSE 5
    END,
    a.APPLICATION_ID;

-- ============================================================================
-- ALTERNATIVE VERSION: Dynamic Portfolio Columns
-- This version automatically creates columns for all portfolios found
-- ============================================================================

/*
WITH all_portfolios AS (
    SELECT DISTINCT PORTFOLIO_NAME
    FROM BUSINESS_INTELLIGENCE.ANALYTICS.VW_APP_PORTFOLIOS_AND_SUB_PORTFOLIOS
    WHERE APPLICATION_ID IN (/* your application list */)
),

dynamic_pivot AS (
    SELECT 
        APPLICATION_ID,
        LISTAGG(
            'MAX(CASE WHEN PORTFOLIO_NAME = ''' || PORTFOLIO_NAME || ''' THEN 1 ELSE 0 END) AS ' ||
            REPLACE(REPLACE(REPLACE(UPPER(PORTFOLIO_NAME), ' ', '_'), '-', '_'), '/', '_'),
            ',\n        '
        ) WITHIN GROUP (ORDER BY PORTFOLIO_NAME) AS PIVOT_COLUMNS
    FROM all_portfolios
    GROUP BY 1
)

-- Use the PIVOT_COLUMNS output to build your dynamic query
SELECT PIVOT_COLUMNS FROM dynamic_pivot;
*/