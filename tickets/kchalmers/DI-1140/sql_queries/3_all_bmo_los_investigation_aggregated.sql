-- DI-1140: BMO All Routing Numbers Investigation - LOS Applications Analysis
-- Comprehensive analysis of all BMO routing numbers for fraud patterns
-- ENHANCED: Includes GIACT account creation statistics, loan amount analysis, and partner distribution

-- Variables for easy modification
SET ANALYSIS_DATE = '2025-08-01';  -- Friday when request was submitted  
SET DAYS_THRESHOLD = (SELECT (30 + DATEDIFF('day', $ANALYSIS_DATE, CURRENT_DATE())));  -- Dynamic: 30 days + difference between analysis date and today

-- LOS APPLICATIONS QUERY FOR ALL BMO ROUTING NUMBERS
WITH fraud_portfolios AS (
    SELECT 
        listagg(PORTFOLIO_NAME,',') as CURRENT_fraud_portfolios, 
        APPLICATION_ID 
    FROM BUSINESS_INTELLIGENCE.ANALYTICS.VW_APP_PORTFOLIOS_AND_SUB_PORTFOLIOS
    WHERE PORTFOLIO_CATEGORY = 'Fraud' 
    GROUP BY APPLICATION_ID
),
bmo_routing_numbers AS (
    SELECT 
        ROUTING_NUMBER, 
        BANK_NAME, 
        ACQUISITION_SOURCE,
        SERIES_TYPE,
        PRIMARY_USE,
        NOTES
    FROM BUSINESS_INTELLIGENCE_DEV.CRON_STORE.BMO_ROUTING_NUMBERS
    WHERE ROUTING_NUMBER != '071025661'  -- Exclude primary routing number already analyzed in queries 1&2
)
SELECT 
    -- === BMO ROUTING INFO ===
    brn.ROUTING_NUMBER,
    brn.BANK_NAME,
    brn.ACQUISITION_SOURCE,
    brn.SERIES_TYPE,
    brn.PRIMARY_USE,
    
    -- === APPLICATION SUMMARY ===
    COUNT(*) as TOTAL_APPLICATIONS,
    COUNT(CASE WHEN le.CREATED >= DATEADD('day', -$DAYS_THRESHOLD, CURRENT_DATE()) THEN 1 END) as RECENT_APPLICATIONS,
    $DAYS_THRESHOLD AS CREATION_DAYS_THRESHOLD_BOUNDARY,
    
    -- === LMS PROGRESSION TRACKING ===
    COUNT(LMS.LOAN_ID) as APPLICATIONS_PROGRESSED_TO_LMS,
    ROUND(COUNT(LMS.LOAN_ID) * 100.0 / COUNT(*), 2) as PROGRESSION_RATE_PCT,
    
    -- === FRAUD INDICATORS ===
    COUNT(CASE WHEN fp.CURRENT_fraud_portfolios IS NOT NULL THEN 1 END) as FRAUD_FLAGGED_APPS,
    COUNT(CASE WHEN CLS.FRAUD_STATUS = 'False Positive' THEN 1 END) as FALSE_POSITIVE_APPS,
    COUNT(CASE WHEN CLS.FRAUD_STATUS = 'Pass' THEN 1 END) as FRAUD_PASSED_APPS,
    
    -- === STATUS BREAKDOWN ===
    COUNT(CASE WHEN lssec.TITLE = 'Originated' THEN 1 END) as ORIGINATED_STATUS,
    COUNT(CASE WHEN lssec.TITLE = 'Expired' THEN 1 END) as EXPIRED_STATUS,
    COUNT(CASE WHEN lssec.TITLE = 'Declined' THEN 1 END) as DECLINED_STATUS,
    
    -- === DATE RANGES ===
    MIN(le.CREATED) as EARLIEST_APPLICATION,
    MAX(le.CREATED) as LATEST_APPLICATION,
    
    -- === USER PATTERN ANALYSIS ===
    COUNT(DISTINCT vlcc.CUSTOMER_ID) as UNIQUE_CUSTOMERS,
    ROUND(COUNT(*) * 1.0 / COUNT(DISTINCT vlcc.CUSTOMER_ID), 2) as AVG_APPS_PER_CUSTOMER,
    
    -- === RISK ASSESSMENT ===
    CASE 
        WHEN COUNT(CASE WHEN le.CREATED >= DATEADD('day', -$DAYS_THRESHOLD, CURRENT_DATE()) THEN 1 END) >= 10 THEN 'HIGH'
        WHEN COUNT(CASE WHEN le.CREATED >= DATEADD('day', -$DAYS_THRESHOLD, CURRENT_DATE()) THEN 1 END) >= 5 THEN 'MEDIUM' 
        WHEN COUNT(CASE WHEN le.CREATED >= DATEADD('day', -$DAYS_THRESHOLD, CURRENT_DATE()) THEN 1 END) > 0 THEN 'LOW'
        ELSE 'NONE'
    END as RECENT_ACTIVITY_RISK,
    
    -- === ENHANCED GIACT ACCOUNT CREATION ANALYSIS ===
    COUNT(CASE WHEN giact.ACCOUNT_AGE_DAYS <= 30 THEN 1 END) as HIGH_RISK_NEW_ACCOUNTS,
    COUNT(CASE WHEN giact.ACCOUNT_AGE_DAYS BETWEEN 31 AND 90 THEN 1 END) as MEDIUM_RISK_ACCOUNTS,
    COUNT(CASE WHEN giact.ACCOUNT_AGE_DAYS > 90 THEN 1 END) as LOW_RISK_OLD_ACCOUNTS,
    ROUND(AVG(giact.ACCOUNT_AGE_DAYS), 1) as AVG_ACCOUNT_AGE_DAYS,
    MIN(giact.ACCOUNT_ADDED_DATE) as EARLIEST_ACCOUNT_CREATION,
    MAX(giact.ACCOUNT_ADDED_DATE) as LATEST_ACCOUNT_CREATION,
    
    -- === ENHANCED LOAN AMOUNT ANALYSIS ===
    ROUND(AVG(CAST(CLS.REQUESTED_LOAN_AMOUNT AS FLOAT)), 2) as AVG_REQUESTED_AMOUNT,
    ROUND(AVG(CAST(CLS.LOAN_AMOUNT AS FLOAT)), 2) as AVG_FINAL_AMOUNT,
    MIN(CAST(CLS.REQUESTED_LOAN_AMOUNT AS FLOAT)) as MIN_REQUESTED_AMOUNT,
    MAX(CAST(CLS.REQUESTED_LOAN_AMOUNT AS FLOAT)) as MAX_REQUESTED_AMOUNT,
    SUM(CAST(CLS.REQUESTED_LOAN_AMOUNT AS FLOAT)) as TOTAL_REQUESTED_AMOUNT,
    
    -- === ENHANCED PARTNER AND STATE ANALYSIS ===
    LISTAGG(DISTINCT CLS.CAPITAL_PARTNER, ', ') as CAPITAL_PARTNERS_USED,
    COUNT(DISTINCT CLS.CAPITAL_PARTNER) as UNIQUE_CAPITAL_PARTNERS,
    LISTAGG(DISTINCT CLS.HOME_ADDRESS_STATE, ', ') as APPLICANT_STATES,
    COUNT(DISTINCT CLS.HOME_ADDRESS_STATE) as UNIQUE_STATES,
    
    -- === ACQUISITION CHANNEL ANALYSIS ===
    LISTAGG(DISTINCT CLS.UTM_SOURCE, ', ') as ACQUISITION_SOURCES,
    COUNT(DISTINCT CLS.UTM_SOURCE) as UNIQUE_ACQUISITION_SOURCES

FROM bmo_routing_numbers brn
JOIN BUSINESS_INTELLIGENCE.BRIDGE.VW_BANK_INFO bi ON brn.ROUTING_NUMBER = bi.ROUTING_NUMBER
JOIN BUSINESS_INTELLIGENCE.BRIDGE.VW_LOAN_ENTITY_CURRENT le 
    ON bi.LOAN_ID = le.ID AND le.SCHEMA_NAME = ARCA.CONFIG.LOS_SCHEMA()
JOIN BUSINESS_INTELLIGENCE.BRIDGE.VW_LOAN_SETTINGS_ENTITY_CURRENT lsec
    ON bi.LOAN_ID = lsec.LOAN_ID AND lsec.SCHEMA_NAME = ARCA.CONFIG.LOS_SCHEMA()
JOIN BUSINESS_INTELLIGENCE.BRIDGE.VW_LOAN_SUB_STATUS_ENTITY_CURRENT lssec
    ON lsec.LOAN_SUB_STATUS_ID = lssec.ID AND lssec.SCHEMA_NAME = ARCA.CONFIG.LOS_SCHEMA()
JOIN BUSINESS_INTELLIGENCE.BRIDGE.VW_LOAN_CUSTOMER_CURRENT vlcc
    ON bi.LOAN_ID = vlcc.LOAN_ID AND vlcc.SCHEMA_NAME = ARCA.CONFIG.LOS_SCHEMA()
JOIN ARCA.FRESHSNOW.VW_LOS_CUSTOM_LOAN_SETTINGS_CURRENT CLS ON le.ID = CLS.LOAN_ID

-- === ENHANCED JOINS FOR ADDITIONAL DATA ===
-- Join to GIACT data for account creation dates and verification info
LEFT JOIN BUSINESS_INTELLIGENCE.BRIDGE.VW_OSCILAR_GIACT_DATA giact
    ON CAST(bi.LOAN_ID AS VARCHAR) = CAST(giact.APPLICATION_ID AS VARCHAR)
    AND CAST(bi.ROUTING_NUMBER AS VARCHAR) = CAST(giact.GIACT_ROUTING_NUMBER AS VARCHAR)
    AND CAST(bi.ACCOUNT_NUMBER AS VARCHAR) = CAST(giact.GIACT_ACCOUNT_NUMBER AS VARCHAR)
    

LEFT JOIN ARCA.FRESHSNOW.VW_LMS_CUSTOM_LOAN_SETTINGS_CURRENT LMS ON CLS.APPLICATION_GUID = LMS.LEAD_GUID
LEFT JOIN fraud_portfolios fp ON bi.LOAN_ID = fp.APPLICATION_ID

WHERE le.ACTIVE = 1 AND le.DELETED = 0

GROUP BY 
    brn.ROUTING_NUMBER, 
    brn.BANK_NAME, 
    brn.ACQUISITION_SOURCE, 
    brn.SERIES_TYPE, 
    brn.PRIMARY_USE

HAVING COUNT(*) > 0  -- Only show routing numbers with activity

ORDER BY 
    RECENT_APPLICATIONS DESC, 
    TOTAL_APPLICATIONS DESC,
    PROGRESSION_RATE_PCT DESC;