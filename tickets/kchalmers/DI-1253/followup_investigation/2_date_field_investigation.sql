/*
DI-1253 Follow-up: Transaction Date Field Investigation

Purpose: Compare TRANSACTION_DATE vs APPLY_DATE to determine which matches LoanPro UI
*/

USE WAREHOUSE BUSINESS_INTELLIGENCE_LARGE;
USE ROLE BUSINESS_INTELLIGENCE_PII;

-- Investigation 1: Compare date fields for FTFCU loans
SELECT
    vl.LEGACY_LOAN_ID as LOANID,
    pt.PAYMENT_ID,
    pt.TRANSACTION_DATE,
    pt.APPLY_DATE,
    pt.CLS_TRANSACTION_DATE,
    DATEDIFF(day, pt.TRANSACTION_DATE, pt.APPLY_DATE) as days_difference_trans_to_apply,
    pt.PAYMENT_TYPE,
    pt.TRANSACTION_AMOUNT,
    pt.IS_REVERSED,
    pt.IS_REJECTED,
    pt.IS_SETTLED,
    CASE
        WHEN pt.IS_REVERSED THEN 'REVERSED'
        WHEN pt.IS_REJECTED THEN 'REJECTED'
        WHEN pt.IS_SETTLED THEN 'SETTLED'
        ELSE 'OTHER'
    END as PAYMENT_STATUS_SUMMARY
FROM BUSINESS_INTELLIGENCE.ANALYTICS.VW_LP_PAYMENT_TRANSACTION pt
INNER JOIN business_intelligence.analytics.vw_loan vl
    ON pt.LOAN_ID::VARCHAR = vl.LOAN_ID::VARCHAR
WHERE vl.LEGACY_LOAN_ID IN (
    SELECT DISTINCT LOANID
    FROM BUSINESS_INTELLIGENCE_DEV.CRON_STORE.CHARGE_OFF_FTFCU_ALLOCATED_POPULATION
)
ORDER BY vl.LEGACY_LOAN_ID, pt.TRANSACTION_DATE DESC
LIMIT 100;

-- Investigation 2: Focus on cases where dates differ
SELECT
    vl.LEGACY_LOAN_ID as LOANID,
    pt.PAYMENT_ID,
    pt.TRANSACTION_DATE,
    pt.APPLY_DATE,
    DATEDIFF(day, pt.TRANSACTION_DATE, pt.APPLY_DATE) as days_diff,
    pt.PAYMENT_TYPE,
    pt.TRANSACTION_AMOUNT,
    pt.IS_REVERSED,
    pt.IS_REJECTED,
    pt.IS_SETTLED
FROM BUSINESS_INTELLIGENCE.ANALYTICS.VW_LP_PAYMENT_TRANSACTION pt
INNER JOIN business_intelligence.analytics.vw_loan vl
    ON pt.LOAN_ID::VARCHAR = vl.LOAN_ID::VARCHAR
WHERE vl.LEGACY_LOAN_ID IN (
    SELECT DISTINCT LOANID
    FROM BUSINESS_INTELLIGENCE_DEV.CRON_STORE.CHARGE_OFF_FTFCU_ALLOCATED_POPULATION
)
    AND pt.TRANSACTION_DATE <> pt.APPLY_DATE
ORDER BY vl.LEGACY_LOAN_ID, pt.TRANSACTION_DATE DESC;

-- Investigation 3: Check reversed transactions specifically
SELECT
    vl.LEGACY_LOAN_ID as LOANID,
    pt.PAYMENT_ID,
    pt.TRANSACTION_DATE,
    pt.APPLY_DATE,
    pt.REVERSAL_DATE,
    DATEDIFF(day, pt.TRANSACTION_DATE, pt.APPLY_DATE) as trans_to_apply_days,
    pt.PAYMENT_TYPE,
    pt.TRANSACTION_AMOUNT,
    pt.IS_REVERSED,
    pt.IS_REJECTED,
    pt.IS_SETTLED
FROM BUSINESS_INTELLIGENCE.ANALYTICS.VW_LP_PAYMENT_TRANSACTION pt
INNER JOIN business_intelligence.analytics.vw_loan vl
    ON pt.LOAN_ID::VARCHAR = vl.LOAN_ID::VARCHAR
WHERE vl.LEGACY_LOAN_ID IN (
    SELECT DISTINCT LOANID
    FROM BUSINESS_INTELLIGENCE_DEV.CRON_STORE.CHARGE_OFF_FTFCU_ALLOCATED_POPULATION
)
    AND pt.IS_REVERSED = TRUE
ORDER BY vl.LEGACY_LOAN_ID, pt.TRANSACTION_DATE DESC;

-- Investigation 4: Date field statistics
SELECT
    'Date Differences Summary' as metric_type,
    COUNT(*) as total_transactions,
    SUM(CASE WHEN pt.TRANSACTION_DATE <> pt.APPLY_DATE THEN 1 ELSE 0 END) as different_dates,
    SUM(CASE WHEN pt.TRANSACTION_DATE = pt.APPLY_DATE THEN 1 ELSE 0 END) as same_dates,
    AVG(CASE WHEN pt.TRANSACTION_DATE <> pt.APPLY_DATE
        THEN DATEDIFF(day, pt.TRANSACTION_DATE, pt.APPLY_DATE) END) as avg_days_diff,
    MIN(CASE WHEN pt.TRANSACTION_DATE <> pt.APPLY_DATE
        THEN DATEDIFF(day, pt.TRANSACTION_DATE, pt.APPLY_DATE) END) as min_days_diff,
    MAX(CASE WHEN pt.TRANSACTION_DATE <> pt.APPLY_DATE
        THEN DATEDIFF(day, pt.TRANSACTION_DATE, pt.APPLY_DATE) END) as max_days_diff
FROM BUSINESS_INTELLIGENCE.ANALYTICS.VW_LP_PAYMENT_TRANSACTION pt
INNER JOIN business_intelligence.analytics.vw_loan vl
    ON pt.LOAN_ID::VARCHAR = vl.LOAN_ID::VARCHAR
WHERE vl.LEGACY_LOAN_ID IN (
    SELECT DISTINCT LOANID
    FROM BUSINESS_INTELLIGENCE_DEV.CRON_STORE.CHARGE_OFF_FTFCU_ALLOCATED_POPULATION
);
