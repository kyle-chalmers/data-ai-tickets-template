/*
DI-1253: Add LP_APPLY_DATE and Remove Unnecessary Columns
Script to:
1. Add LP_APPLY_DATE column
2. Remove CLS_CLEARING_DATE, CLS_REVERSAL_DATE, CLS_REVERSAL_REASON_CODE, LP_TRANSACTION_DATE
*/

USE WAREHOUSE BUSINESS_INTELLIGENCE_LARGE;
USE ROLE BUSINESS_INTELLIGENCE_PII;

-- Step 1: Add LP_APPLY_DATE column
ALTER TABLE BUSINESS_INTELLIGENCE_DEV.CRON_STORE.CHARGE_OFF_FTFCU_ALLOCATED_POPULATION_TRANSACTIONS
ADD COLUMN LP_APPLY_DATE DATE;

-- Step 2: Populate LP_APPLY_DATE for LP transactions
UPDATE BUSINESS_INTELLIGENCE_DEV.CRON_STORE.CHARGE_OFF_FTFCU_ALLOCATED_POPULATION_TRANSACTIONS t
SET LP_APPLY_DATE = lp.APPLY_DATE
FROM BUSINESS_INTELLIGENCE.ANALYTICS.VW_LP_PAYMENT_TRANSACTION lp
WHERE t.TRANSACTION_ID = lp.PAYMENT_ID::VARCHAR
AND t.SOURCE = 'LP';

-- Step 3: Populate LP_APPLY_DATE for CLS transactions that were migrated from LP
UPDATE BUSINESS_INTELLIGENCE_DEV.CRON_STORE.CHARGE_OFF_FTFCU_ALLOCATED_POPULATION_TRANSACTIONS t
SET LP_APPLY_DATE = lp.APPLY_DATE
FROM BUSINESS_INTELLIGENCE.ANALYTICS.VW_LP_PAYMENT_TRANSACTION lp
INNER JOIN BUSINESS_INTELLIGENCE.ANALYTICS.VW_LOAN vl
    ON UPPER(lp.loan_id::TEXT) = UPPER(vl.loan_id::TEXT)
WHERE t.SOURCE = 'CLS'
AND t.PAYMENT_FLAG = TRUE
AND lower(vl.LEAD_GUID) = lower(t.PAYOFFUID)
AND lp.CLS_TRANSACTION_DATE = t.CLS_TRANSACTION_DATE
AND  SPLIT_PART(SPLIT_PART(INFO, '[', 2), ']', 1) = t.TRANSACTION_ID
AND lp.IS_MIGRATED = 1;

-- Step 4: Remove unnecessary columns
ALTER TABLE BUSINESS_INTELLIGENCE_DEV.CRON_STORE.CHARGE_OFF_FTFCU_ALLOCATED_POPULATION_TRANSACTIONS
DROP COLUMN CLS_CLEARING_DATE;

ALTER TABLE BUSINESS_INTELLIGENCE_DEV.CRON_STORE.CHARGE_OFF_FTFCU_ALLOCATED_POPULATION_TRANSACTIONS
DROP COLUMN CLS_REVERSAL_DATE;

ALTER TABLE BUSINESS_INTELLIGENCE_DEV.CRON_STORE.CHARGE_OFF_FTFCU_ALLOCATED_POPULATION_TRANSACTIONS
DROP COLUMN CLS_REVERSAL_REASON_CODE;

ALTER TABLE BUSINESS_INTELLIGENCE_DEV.CRON_STORE.CHARGE_OFF_FTFCU_ALLOCATED_POPULATION_TRANSACTIONS
DROP COLUMN LP_TRANSACTION_DATE;

-- ===========================
-- VALIDATION QUERIES
-- ===========================

-- 1. Check LP_APPLY_DATE population
SELECT
    SOURCE,
    PAYMENT_FLAG,
    COUNT(*) as TOTAL_TRANSACTIONS,
    COUNT(LP_APPLY_DATE) as HAS_LP_APPLY_DATE,
    ROUND(COUNT(LP_APPLY_DATE) * 100.0 / NULLIF(COUNT(*), 0), 2) as PCT_WITH_LP_APPLY_DATE
FROM BUSINESS_INTELLIGENCE_DEV.CRON_STORE.CHARGE_OFF_FTFCU_ALLOCATED_POPULATION_TRANSACTIONS
GROUP BY SOURCE, PAYMENT_FLAG
ORDER BY SOURCE, PAYMENT_FLAG DESC;

-- 2. Sample transactions with new structure
SELECT
    SOURCE,
    TRANSACTION_ID,
    LOANID,
    LOAN_TRANSACTION_TYPE,
    LOAN_TRANSACTION_DATE,
    CLS_TRANSACTION_DATE,
    LP_APPLY_DATE,
    PAYMENT_FLAG
FROM BUSINESS_INTELLIGENCE_DEV.CRON_STORE.CHARGE_OFF_FTFCU_ALLOCATED_POPULATION_TRANSACTIONS
WHERE SOURCE IN ('CLS', 'LP')
AND PAYMENT_FLAG = TRUE
QUALIFY ROW_NUMBER() OVER (PARTITION BY SOURCE ORDER BY LOAN_TRANSACTION_DATE DESC) <= 5
ORDER BY SOURCE, LOAN_TRANSACTION_DATE DESC;

-- 3. Verify columns removed
DESCRIBE TABLE BUSINESS_INTELLIGENCE_DEV.CRON_STORE.CHARGE_OFF_FTFCU_ALLOCATED_POPULATION_TRANSACTIONS;
