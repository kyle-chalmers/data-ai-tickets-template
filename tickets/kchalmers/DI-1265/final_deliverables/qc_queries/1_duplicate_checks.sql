/* QC VALIDATION QUERIES FOR AUDIENCE LIST
 * Checks for duplicates across key identifiers
 */

USE WAREHOUSE BUSINESS_INTELLIGENCE_LARGE;
USE DATABASE BUSINESS_INTELLIGENCE;

-- 1.1: Check for duplicate PAYOFFUIDs
WITH UNSUBSCRIBED_LIST AS (
    SELECT
        A.SUBSCRIBER_KEY,
        A.CREATED_DATE,
        C.EMAIL_ADDRESS,
        B.LOAN_ID AS APPLICATION_ID,
        D.APPLICATION_GUID
    FROM FIVETRAN.SALESFORCE_MARKETING_CLOUD.LIST_SUBSCRIBER A
    INNER JOIN BRIDGE.VW_LOAN_CUSTOMER_CURRENT B
        ON A.SUBSCRIBER_KEY = B.CUSTOMER_ID::VARCHAR
        AND B.SCHEMA_NAME = CONFIG.LOS_SCHEMA()
    INNER JOIN FIVETRAN.SALESFORCE_MARKETING_CLOUD.SUBSCRIBER C
        ON A.SUBSCRIBER_KEY = C.SUBSCRIBER_KEY
    INNER JOIN BRIDGE.VW_LOS_CUSTOM_LOAN_SETTINGS_CURRENT D
        ON D.LOAN_ID::VARCHAR = B.LOAN_ID::VARCHAR
    WHERE 1=1
        AND A.STATUS = 'Unsubscribed'
        AND LIST_ID = 143
)
,SFMC_OPT_OUTS_SUPPRESSION AS (
    SELECT DISTINCT
        D.LEAD_GUID,
        REGEXP_REPLACE(UPPER(D.EMAIL),'(IN-MIGRATION-|SOLD-TO-BOUNCE-)','') AS EMAIL
    FROM UNSUBSCRIBED_LIST A
    INNER JOIN (
        SELECT DISTINCT SUBSCRIBER_KEY, DERIVED_PAYOFFUID
        FROM BUSINESS_INTELLIGENCE.CRON_STORE.DSH_EMAIL_MONITORING_EVENTS
    ) C
        ON A.SUBSCRIBER_KEY = C.SUBSCRIBER_KEY
    INNER JOIN BUSINESS_INTELLIGENCE.ANALYTICS_PII.VW_LEAD_PII D
        ON IFF(D.LEAD_GUID = C.DERIVED_PAYOFFUID, D.LEAD_GUID = C.DERIVED_PAYOFFUID, D.LEAD_GUID = A.APPLICATION_GUID)
)
,FINAL_QUERY AS (
    SELECT DISTINCT
        C.EMAIL,
        E.CUSTOMER_ID AS LOS_CUSTOMER_ID,
        A.MEMBER_ID AS LMS_CUSTOMER_ID,
        A.LEAD_GUID AS PAYOFFUID,
        B.LOAN_SUB_STATUS_TEXT AS LP_LOAN_STATUS,
        A.APPLICATION_ID,
        C.FIRST_NAME,
        C.LAST_NAME,
        C.STATE
    FROM ANALYTICS.VW_LOAN A
    INNER JOIN BRIDGE.VW_LOAN_STATUS_ARCHIVE_CURRENT B
        ON A.LOAN_ID::VARCHAR = B.LOAN_ID::VARCHAR
        AND B.DATE = CURRENT_DATE
        AND B.DAYS_PAST_DUE < 3
    INNER JOIN ANALYTICS_PII.VW_MEMBER_PII C
        ON A.MEMBER_ID = C.MEMBER_ID
        AND C.MEMBER_PII_END_DATE IS NULL
    INNER JOIN BRIDGE.VW_LOAN_CUSTOMER_CURRENT E
        ON A.APPLICATION_ID::VARCHAR = E.LOAN_ID::VARCHAR
        AND E.SCHEMA_NAME = CONFIG.LOS_SCHEMA()
    INNER JOIN ANALYTICS.VW_LOAN_CONTACT_RULES F
        ON A.LOAN_ID::VARCHAR = F.LOAN_ID::VARCHAR
        AND F.CEASE_AND_DESIST = FALSE
        AND F.SUPPRESS_EMAIL = FALSE
    LEFT JOIN SFMC_OPT_OUTS_SUPPRESSION G
        ON A.LEAD_GUID = G.LEAD_GUID
    WHERE 1=1
        AND A.LOAN_CLOSED_DATE IS NULL
        AND A.CHARGE_OFF_DATE IS NULL
        AND G.LEAD_GUID IS NULL
)
SELECT COUNT(*) AS ROW_COUNT,
       PAYOFFUID
FROM FINAL_QUERY
GROUP BY ALL
HAVING ROW_COUNT > 1
ORDER BY 1 DESC;

-- 1.2: Check for duplicate LOS Customer IDs
WITH UNSUBSCRIBED_LIST AS (
    SELECT
        A.SUBSCRIBER_KEY,
        A.CREATED_DATE,
        C.EMAIL_ADDRESS,
        B.LOAN_ID AS APPLICATION_ID,
        D.APPLICATION_GUID
    FROM FIVETRAN.SALESFORCE_MARKETING_CLOUD.LIST_SUBSCRIBER A
    INNER JOIN BRIDGE.VW_LOAN_CUSTOMER_CURRENT B
        ON A.SUBSCRIBER_KEY = B.CUSTOMER_ID::VARCHAR
        AND B.SCHEMA_NAME = CONFIG.LOS_SCHEMA()
    INNER JOIN FIVETRAN.SALESFORCE_MARKETING_CLOUD.SUBSCRIBER C
        ON A.SUBSCRIBER_KEY = C.SUBSCRIBER_KEY
    INNER JOIN BRIDGE.VW_LOS_CUSTOM_LOAN_SETTINGS_CURRENT D
        ON D.LOAN_ID::VARCHAR = B.LOAN_ID::VARCHAR
    WHERE 1=1
        AND A.STATUS = 'Unsubscribed'
        AND LIST_ID = 143
)
,SFMC_OPT_OUTS_SUPPRESSION AS (
    SELECT DISTINCT
        D.LEAD_GUID,
        REGEXP_REPLACE(UPPER(D.EMAIL),'(IN-MIGRATION-|SOLD-TO-BOUNCE-)','') AS EMAIL
    FROM UNSUBSCRIBED_LIST A
    INNER JOIN (
        SELECT DISTINCT SUBSCRIBER_KEY, DERIVED_PAYOFFUID
        FROM BUSINESS_INTELLIGENCE.CRON_STORE.DSH_EMAIL_MONITORING_EVENTS
    ) C
        ON A.SUBSCRIBER_KEY = C.SUBSCRIBER_KEY
    INNER JOIN BUSINESS_INTELLIGENCE.ANALYTICS_PII.VW_LEAD_PII D
        ON IFF(D.LEAD_GUID = C.DERIVED_PAYOFFUID, D.LEAD_GUID = C.DERIVED_PAYOFFUID, D.LEAD_GUID = A.APPLICATION_GUID)
)
,FINAL_QUERY AS (
    SELECT DISTINCT
        C.EMAIL,
        E.CUSTOMER_ID AS LOS_CUSTOMER_ID,
        A.MEMBER_ID AS LMS_CUSTOMER_ID,
        A.LEAD_GUID AS PAYOFFUID,
        B.LOAN_SUB_STATUS_TEXT AS LP_LOAN_STATUS,
        A.APPLICATION_ID,
        C.FIRST_NAME,
        C.LAST_NAME,
        C.STATE
    FROM ANALYTICS.VW_LOAN A
    INNER JOIN BRIDGE.VW_LOAN_STATUS_ARCHIVE_CURRENT B
        ON A.LOAN_ID::VARCHAR = B.LOAN_ID::VARCHAR
        AND B.DATE = CURRENT_DATE
        AND B.DAYS_PAST_DUE < 3
    INNER JOIN ANALYTICS_PII.VW_MEMBER_PII C
        ON A.MEMBER_ID = C.MEMBER_ID
        AND C.MEMBER_PII_END_DATE IS NULL
    INNER JOIN BRIDGE.VW_LOAN_CUSTOMER_CURRENT E
        ON A.APPLICATION_ID::VARCHAR = E.LOAN_ID::VARCHAR
        AND E.SCHEMA_NAME = CONFIG.LOS_SCHEMA()
    INNER JOIN ANALYTICS.VW_LOAN_CONTACT_RULES F
        ON A.LOAN_ID::VARCHAR = F.LOAN_ID::VARCHAR
        AND F.CEASE_AND_DESIST = FALSE
        AND F.SUPPRESS_EMAIL = FALSE
    LEFT JOIN SFMC_OPT_OUTS_SUPPRESSION G
        ON A.LEAD_GUID = G.LEAD_GUID
    WHERE 1=1
        AND A.LOAN_CLOSED_DATE IS NULL
        AND A.CHARGE_OFF_DATE IS NULL
        AND G.LEAD_GUID IS NULL
)
SELECT COUNT(*) AS ROW_COUNT,
       LOS_CUSTOMER_ID
FROM FINAL_QUERY
GROUP BY ALL
HAVING ROW_COUNT > 1
ORDER BY 1 DESC;

-- 1.3: Check for duplicate LMS Customer IDs
WITH UNSUBSCRIBED_LIST AS (
    SELECT
        A.SUBSCRIBER_KEY,
        A.CREATED_DATE,
        C.EMAIL_ADDRESS,
        B.LOAN_ID AS APPLICATION_ID,
        D.APPLICATION_GUID
    FROM FIVETRAN.SALESFORCE_MARKETING_CLOUD.LIST_SUBSCRIBER A
    INNER JOIN BRIDGE.VW_LOAN_CUSTOMER_CURRENT B
        ON A.SUBSCRIBER_KEY = B.CUSTOMER_ID::VARCHAR
        AND B.SCHEMA_NAME = CONFIG.LOS_SCHEMA()
    INNER JOIN FIVETRAN.SALESFORCE_MARKETING_CLOUD.SUBSCRIBER C
        ON A.SUBSCRIBER_KEY = C.SUBSCRIBER_KEY
    INNER JOIN BRIDGE.VW_LOS_CUSTOM_LOAN_SETTINGS_CURRENT D
        ON D.LOAN_ID::VARCHAR = B.LOAN_ID::VARCHAR
    WHERE 1=1
        AND A.STATUS = 'Unsubscribed'
        AND LIST_ID = 143
)
,SFMC_OPT_OUTS_SUPPRESSION AS (
    SELECT DISTINCT
        D.LEAD_GUID,
        REGEXP_REPLACE(UPPER(D.EMAIL),'(IN-MIGRATION-|SOLD-TO-BOUNCE-)','') AS EMAIL
    FROM UNSUBSCRIBED_LIST A
    INNER JOIN (
        SELECT DISTINCT SUBSCRIBER_KEY, DERIVED_PAYOFFUID
        FROM BUSINESS_INTELLIGENCE.CRON_STORE.DSH_EMAIL_MONITORING_EVENTS
    ) C
        ON A.SUBSCRIBER_KEY = C.SUBSCRIBER_KEY
    INNER JOIN BUSINESS_INTELLIGENCE.ANALYTICS_PII.VW_LEAD_PII D
        ON IFF(D.LEAD_GUID = C.DERIVED_PAYOFFUID, D.LEAD_GUID = C.DERIVED_PAYOFFUID, D.LEAD_GUID = A.APPLICATION_GUID)
)
,FINAL_QUERY AS (
    SELECT DISTINCT
        C.EMAIL,
        E.CUSTOMER_ID AS LOS_CUSTOMER_ID,
        A.MEMBER_ID AS LMS_CUSTOMER_ID,
        A.LEAD_GUID AS PAYOFFUID,
        B.LOAN_SUB_STATUS_TEXT AS LP_LOAN_STATUS,
        A.APPLICATION_ID,
        C.FIRST_NAME,
        C.LAST_NAME,
        C.STATE
    FROM ANALYTICS.VW_LOAN A
    INNER JOIN BRIDGE.VW_LOAN_STATUS_ARCHIVE_CURRENT B
        ON A.LOAN_ID::VARCHAR = B.LOAN_ID::VARCHAR
        AND B.DATE = CURRENT_DATE
        AND B.DAYS_PAST_DUE < 3
    INNER JOIN ANALYTICS_PII.VW_MEMBER_PII C
        ON A.MEMBER_ID = C.MEMBER_ID
        AND C.MEMBER_PII_END_DATE IS NULL
    INNER JOIN BRIDGE.VW_LOAN_CUSTOMER_CURRENT E
        ON A.APPLICATION_ID::VARCHAR = E.LOAN_ID::VARCHAR
        AND E.SCHEMA_NAME = CONFIG.LOS_SCHEMA()
    INNER JOIN ANALYTICS.VW_LOAN_CONTACT_RULES F
        ON A.LOAN_ID::VARCHAR = F.LOAN_ID::VARCHAR
        AND F.CEASE_AND_DESIST = FALSE
        AND F.SUPPRESS_EMAIL = FALSE
    LEFT JOIN SFMC_OPT_OUTS_SUPPRESSION G
        ON A.LEAD_GUID = G.LEAD_GUID
    WHERE 1=1
        AND A.LOAN_CLOSED_DATE IS NULL
        AND A.CHARGE_OFF_DATE IS NULL
        AND G.LEAD_GUID IS NULL
)
SELECT COUNT(*) AS ROW_COUNT,
       LMS_CUSTOMER_ID
FROM FINAL_QUERY
GROUP BY ALL
HAVING ROW_COUNT > 1
ORDER BY 1 DESC;

-- 1.4: Check for duplicate Emails
WITH UNSUBSCRIBED_LIST AS (
    SELECT
        A.SUBSCRIBER_KEY,
        A.CREATED_DATE,
        C.EMAIL_ADDRESS,
        B.LOAN_ID AS APPLICATION_ID,
        D.APPLICATION_GUID
    FROM FIVETRAN.SALESFORCE_MARKETING_CLOUD.LIST_SUBSCRIBER A
    INNER JOIN BRIDGE.VW_LOAN_CUSTOMER_CURRENT B
        ON A.SUBSCRIBER_KEY = B.CUSTOMER_ID::VARCHAR
        AND B.SCHEMA_NAME = CONFIG.LOS_SCHEMA()
    INNER JOIN FIVETRAN.SALESFORCE_MARKETING_CLOUD.SUBSCRIBER C
        ON A.SUBSCRIBER_KEY = C.SUBSCRIBER_KEY
    INNER JOIN BRIDGE.VW_LOS_CUSTOM_LOAN_SETTINGS_CURRENT D
        ON D.LOAN_ID::VARCHAR = B.LOAN_ID::VARCHAR
    WHERE 1=1
        AND A.STATUS = 'Unsubscribed'
        AND LIST_ID = 143
)
,SFMC_OPT_OUTS_SUPPRESSION AS (
    SELECT DISTINCT
        D.LEAD_GUID,
        REGEXP_REPLACE(UPPER(D.EMAIL),'(IN-MIGRATION-|SOLD-TO-BOUNCE-)','') AS EMAIL
    FROM UNSUBSCRIBED_LIST A
    INNER JOIN (
        SELECT DISTINCT SUBSCRIBER_KEY, DERIVED_PAYOFFUID
        FROM BUSINESS_INTELLIGENCE.CRON_STORE.DSH_EMAIL_MONITORING_EVENTS
    ) C
        ON A.SUBSCRIBER_KEY = C.SUBSCRIBER_KEY
    INNER JOIN BUSINESS_INTELLIGENCE.ANALYTICS_PII.VW_LEAD_PII D
        ON IFF(D.LEAD_GUID = C.DERIVED_PAYOFFUID, D.LEAD_GUID = C.DERIVED_PAYOFFUID, D.LEAD_GUID = A.APPLICATION_GUID)
)
,FINAL_QUERY AS (
    SELECT DISTINCT
        C.EMAIL,
        E.CUSTOMER_ID AS LOS_CUSTOMER_ID,
        A.MEMBER_ID AS LMS_CUSTOMER_ID,
        A.LEAD_GUID AS PAYOFFUID,
        B.LOAN_SUB_STATUS_TEXT AS LP_LOAN_STATUS,
        A.APPLICATION_ID,
        C.FIRST_NAME,
        C.LAST_NAME,
        C.STATE
    FROM ANALYTICS.VW_LOAN A
    INNER JOIN BRIDGE.VW_LOAN_STATUS_ARCHIVE_CURRENT B
        ON A.LOAN_ID::VARCHAR = B.LOAN_ID::VARCHAR
        AND B.DATE = CURRENT_DATE
        AND B.DAYS_PAST_DUE < 3
    INNER JOIN ANALYTICS_PII.VW_MEMBER_PII C
        ON A.MEMBER_ID = C.MEMBER_ID
        AND C.MEMBER_PII_END_DATE IS NULL
    INNER JOIN BRIDGE.VW_LOAN_CUSTOMER_CURRENT E
        ON A.APPLICATION_ID::VARCHAR = E.LOAN_ID::VARCHAR
        AND E.SCHEMA_NAME = CONFIG.LOS_SCHEMA()
    INNER JOIN ANALYTICS.VW_LOAN_CONTACT_RULES F
        ON A.LOAN_ID::VARCHAR = F.LOAN_ID::VARCHAR
        AND F.CEASE_AND_DESIST = FALSE
        AND F.SUPPRESS_EMAIL = FALSE
    LEFT JOIN SFMC_OPT_OUTS_SUPPRESSION G
        ON A.LEAD_GUID = G.LEAD_GUID
    WHERE 1=1
        AND A.LOAN_CLOSED_DATE IS NULL
        AND A.CHARGE_OFF_DATE IS NULL
        AND G.LEAD_GUID IS NULL
)
SELECT COUNT(*) AS ROW_COUNT,
       EMAIL
FROM FINAL_QUERY
GROUP BY ALL
HAVING ROW_COUNT > 1
ORDER BY 1 DESC;