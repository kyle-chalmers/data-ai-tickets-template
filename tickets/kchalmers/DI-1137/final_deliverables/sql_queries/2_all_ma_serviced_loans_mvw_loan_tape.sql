-- DI-1137: Massachusetts Regulator Request (MVW_LOAN_TAPE VERSION)  
-- Query 2: All loans serviced for Massachusetts residents (no time limit, since inception)
-- Purpose: Provide comprehensive list of all MA loans Happy Money has serviced
-- Data Source: BUSINESS_INTELLIGENCE.DATA_STORE.MVW_LOAN_TAPE

-- Set state parameter
SET STATE_FILTER = 'MA';

-- Main query for all Massachusetts loans using main loan tape
WITH MA_LOAN_TAPE_CURRENT AS (
    -- Get most recent loan tape record for each loan
    SELECT 
        LOANID,
        PAYOFFUID,
        APPLICANTRESIDENCESTATE,
        LOANAMOUNT,
        INTERESTRATE,
        APR,
        ORIGINATIONDATE,
        STATUS,
        PORTFOLIONAME,
        PLACEMENT_STATUS,
        TERM,
        -- Use most recent record for each loan
        ROW_NUMBER() OVER (PARTITION BY LOANID ORDER BY ASOFDATE DESC) as rn
    FROM BUSINESS_INTELLIGENCE.DATA_STORE.MVW_LOAN_TAPE
    WHERE UPPER(APPLICANTRESIDENCESTATE) = $STATE_FILTER
),

ALL_MA_LOANS AS (
    SELECT 
        -- Loan Information
        LT.LOANID,
        LT.LOANAMOUNT,
        LT.INTERESTRATE,
        LT.APR,
        LT.ORIGINATIONDATE,
        LT.STATUS AS CURRENT_STATUS,
        LT.TERM,
        
        -- Additional context
        LT.PORTFOLIONAME,
        LT.APPLICANTRESIDENCESTATE,
        LT.PLACEMENT_STATUS,
        
        -- Attempt to get application date from VW_LOAN (if available)
        VL.APPLICATION_ID,
        VA.APPLICATION_STARTED_DATE AS APPLICATION_DATE,
        
        -- Attempt to get member names (if available)
        MP.FIRST_NAME AS APPLICATION_FIRST_NAME,
        MP.LAST_NAME AS APPLICATION_LAST_NAME
        
    FROM MA_LOAN_TAPE_CURRENT LT
    
    -- LEFT JOIN to get application info if available
    LEFT JOIN BUSINESS_INTELLIGENCE.ANALYTICS.VW_LOAN VL
        ON LT.LOANID = VL.LOAN_ID::VARCHAR
    LEFT JOIN BUSINESS_INTELLIGENCE.ANALYTICS.VW_APPLICATION VA
        ON VL.APPLICATION_ID = VA.APPLICATION_ID
    LEFT JOIN BUSINESS_INTELLIGENCE.ANALYTICS_PII.VW_MEMBER_PII MP
        ON VL.MEMBER_ID::STRING = MP.MEMBER_ID::STRING
        AND MP.MEMBER_PII_END_DATE IS NULL
    
    WHERE LT.rn = 1  -- Most recent record per loan
)

-- Final output with all required regulatory fields
SELECT 
    COALESCE(APPLICATION_DATE, ORIGINATIONDATE) AS APPLICATION_DATE,
    COALESCE(APPLICATION_FIRST_NAME, 'DATA NOT AVAILABLE') AS APPLICATION_FIRST_NAME,
    COALESCE(APPLICATION_LAST_NAME, 'DATA NOT AVAILABLE') AS APPLICATION_LAST_NAME,
    APPLICANTRESIDENCESTATE,
    LOANID,
    LOANAMOUNT,
    CURRENT_STATUS,
    APR,
    INTERESTRATE,
    ORIGINATIONDATE
FROM ALL_MA_LOANS
ORDER BY ORIGINATIONDATE DESC;

-- Summary statistics for all MA loans
WITH MA_LOAN_TAPE_CURRENT AS (
    SELECT 
        LOANID, LOANAMOUNT, ORIGINATIONDATE, INTERESTRATE, APR,
        ROW_NUMBER() OVER (PARTITION BY LOANID ORDER BY ASOFDATE DESC) as rn
    FROM BUSINESS_INTELLIGENCE.DATA_STORE.MVW_LOAN_TAPE
    WHERE UPPER(APPLICANTRESIDENCESTATE) = $STATE_FILTER
),
ALL_MA_LOANS_SUMMARY AS (
    SELECT 
        LT.LOANID,
        LT.LOANAMOUNT,
        LT.ORIGINATIONDATE,
        LT.INTERESTRATE,
        LT.APR
    FROM MA_LOAN_TAPE_CURRENT LT
    WHERE LT.rn = 1
)
SELECT 
    'All MA Serviced Loans (MVW_LOAN_TAPE)' AS QUERY_TYPE,
    COUNT(DISTINCT LOANID) AS TOTAL_LOANS,
    SUM(LOANAMOUNT) AS TOTAL_LOAN_AMOUNT,
    MIN(ORIGINATIONDATE) AS EARLIEST_LOAN,
    MAX(ORIGINATIONDATE) AS LATEST_LOAN,
    ROUND(AVG(INTERESTRATE * 100), 2) AS AVG_INTEREST_RATE_PCT,
    ROUND(AVG(APR), 2) AS AVG_APR,
    -- Breakdown by loan amount ranges
    COUNT(CASE WHEN LOANAMOUNT <= 6000 THEN 1 END) AS LOANS_6K_OR_LESS,
    COUNT(CASE WHEN LOANAMOUNT > 6000 AND LOANAMOUNT <= 10000 THEN 1 END) AS LOANS_6K_TO_10K,
    COUNT(CASE WHEN LOANAMOUNT > 10000 THEN 1 END) AS LOANS_ABOVE_10K
FROM ALL_MA_LOANS_SUMMARY;